/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/webgpu-blas/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sgemm = void 0;\nconst sgemm_chrome_1 = __webpack_require__(/*! ./sgemm_chrome */ \"./node_modules/webgpu-blas/dist/sgemm_chrome.js\");\nconst sgemm_wsl_1 = __webpack_require__(/*! ./sgemm_wsl */ \"./node_modules/webgpu-blas/dist/sgemm_wsl.js\");\nconst sgemm_fallback_1 = __webpack_require__(/*! ./sgemm_fallback */ \"./node_modules/webgpu-blas/dist/sgemm_fallback.js\");\nconst isSafari = navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\nlet useFallback = false;\nfunction sgemm(m, n, k, alpha, a, b, beta = 0.0, c) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (useFallback) {\n            return sgemm_fallback_1.sgemm(m, n, k, alpha, a, b, beta, c);\n        }\n        let result = null;\n        if (isSafari) {\n            try {\n                result = yield sgemm_wsl_1.sgemm(m, n, k, alpha, a, b, beta, c);\n            }\n            catch (error) {\n                console.warn('Error using WebGPU; fallback to pure JavaScript', error);\n            }\n        }\n        else {\n            try {\n                result = yield sgemm_chrome_1.sgemm(m, n, k, alpha, a, b, beta, c);\n            }\n            catch (error) {\n                console.warn('Error using WebGPU; fallback to pure JavaScript', error);\n            }\n        }\n        if (result === null) {\n            useFallback = true;\n            return sgemm_fallback_1.sgemm(m, n, k, alpha, a, b, beta, c);\n        }\n        return result;\n    });\n}\nexports.sgemm = sgemm;\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/index.js?");

/***/ }),

/***/ "./node_modules/webgpu-blas/dist/sgemm_chrome.js":
/*!*******************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/sgemm_chrome.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sgemm = void 0;\nconst shader_sgemm_block_1 = __webpack_require__(/*! ./shader_sgemm_block */ \"./node_modules/webgpu-blas/dist/shader_sgemm_block.js\");\nconst shader_sgemm_generic_1 = __webpack_require__(/*! ./shader_sgemm_generic */ \"./node_modules/webgpu-blas/dist/shader_sgemm_generic.js\");\nlet polyfillgpu_called = false;\nfunction polyfillgpu() {\n    if (polyfillgpu_called) {\n        return;\n    }\n    polyfillgpu_called = true;\n}\nclass WebGPURunner {\n    constructor() {\n        this._initialized = false;\n        this.pipelineCache = new Map();\n        this.isSupportedDevice = false;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._initialized) {\n                return;\n            }\n            polyfillgpu();\n            try {\n                const adapter = yield navigator.gpu.requestAdapter();\n                this._device = yield adapter.requestDevice();\n                this.isSupportedDevice = true;\n            }\n            catch (ex) {\n                console.error('Unsupported device: ', ex.message);\n            }\n            this._initialized = true;\n        });\n    }\n    createPipeline(shader, nBuffers) {\n        const device = this._device;\n        const bindings = [];\n        for (let i = 0; i < nBuffers; i++) {\n            bindings.push({\n                binding: i,\n                visibility: GPUShaderStage.COMPUTE,\n                type: \"storage-buffer\"\n            });\n        }\n        const bindGroupLayout = device.createBindGroupLayout({\n            entries: bindings\n        });\n        const pipelineLayout = device.createPipelineLayout({ bindGroupLayouts: [bindGroupLayout] });\n        const shaderModule = device.createShaderModule({ code: shader });\n        const pipeline = device.createComputePipeline({\n            layout: pipelineLayout,\n            computeStage: {\n                module: shaderModule,\n                entryPoint: \"main\"\n            }\n        });\n        return { bindGroupLayout, pipeline };\n    }\n    run(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const device = this._device;\n            let chromeOutputCopyInfo = [];\n            const buffers = request.buffers.map((bparam, i) => {\n                if (i !== bparam.index) {\n                    throw new Error('request.buffers is not sorted in order of index');\n                }\n                let usage = GPUBufferUsage.STORAGE;\n                if (bparam.output) {\n                    usage |= GPUBufferUsage.COPY_SRC;\n                }\n                const buf = device.createBuffer({\n                    mappedAtCreation: bparam.input ? true : false,\n                    size: bparam.length * Float32Array.BYTES_PER_ELEMENT,\n                    usage\n                });\n                if (bparam.output) {\n                    const dst = device.createBuffer({\n                        size: bparam.length * Float32Array.BYTES_PER_ELEMENT,\n                        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n                    });\n                    chromeOutputCopyInfo.push({ src: buf, dst, size: bparam.length * Float32Array.BYTES_PER_ELEMENT, name: bparam.name });\n                }\n                return buf;\n            });\n            const bindGroup = device.createBindGroup({\n                layout: request.pipeline.bindGroupLayout,\n                entries: request.buffers.map((bparam, i) => ({\n                    binding: i,\n                    resource: {\n                        buffer: buffers[i],\n                        size: bparam.length * Float32Array.BYTES_PER_ELEMENT\n                    }\n                }))\n            });\n            for (let i = 0; i < request.buffers.length; i++) {\n                const bparam = request.buffers[i];\n                if (bparam.input) {\n                    const buffer = buffers[i];\n                    const buffer_ab = buffer.getMappedRange();\n                    const buffer_mapped_array = new Float32Array(buffer_ab);\n                    const input_array = request.inputData[bparam.name];\n                    if (!input_array) {\n                        console.error(`input array '${bparam.name}' is not supplied.`);\n                        continue;\n                    }\n                    if (input_array.length !== buffer_mapped_array.length) {\n                        console.error(`length of input array '${bparam.name}' does not match GPU buffer (${input_array.length} !== ${buffer_mapped_array.length}).`);\n                        continue;\n                    }\n                    buffer_mapped_array.set(input_array);\n                    buffer.unmap();\n                }\n            }\n            const commandEncoder = device.createCommandEncoder();\n            const passEncoder = commandEncoder.beginComputePass();\n            passEncoder.setBindGroup(0, bindGroup);\n            passEncoder.setPipeline(request.pipeline.pipeline);\n            passEncoder.dispatch(request.threadGroups.x, request.threadGroups.y, request.threadGroups.z);\n            passEncoder.endPass();\n            for (const chromeCopy of chromeOutputCopyInfo) {\n                commandEncoder.copyBufferToBuffer(chromeCopy.src, 0, chromeCopy.dst, 0, chromeCopy.size);\n            }\n            device.defaultQueue.submit([commandEncoder.finish()]);\n            const outputs = {};\n            for (const chromeCopy of chromeOutputCopyInfo) {\n                yield chromeCopy.dst.mapAsync(GPUMapMode.READ);\n                const arrayBuffer = chromeCopy.dst.getMappedRange();\n                const buffer_mapped_array = new Float32Array(arrayBuffer);\n                const result_array = new Float32Array(buffer_mapped_array);\n                chromeCopy.dst.unmap();\n                chromeCopy.dst.destroy();\n                outputs[chromeCopy.name] = result_array;\n            }\n            for (const buffer of buffers) {\n                buffer.destroy();\n            }\n            const result = {\n                outputData: outputs,\n            };\n            return result;\n        });\n    }\n}\nconst runner = new WebGPURunner();\nfunction sgemm_block(m, n, k, alpha, a, b) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const shader = shader_sgemm_block_1.Shader;\n        const cache_key = 'sgemm_block';\n        let pipeline = runner.pipelineCache.get(cache_key);\n        if (!pipeline) {\n            pipeline = runner.createPipeline(shader, 4);\n            runner.pipelineCache.set(cache_key, pipeline);\n        }\n        const request = {\n            pipeline,\n            buffers: [\n                { index: 0, name: 'array_a', length: m * k, input: true, output: false },\n                { index: 1, name: 'array_b', length: k * n, input: true, output: false },\n                { index: 2, name: 'array_c', length: m * n, input: false, output: true },\n                { index: 3, name: 'meta', length: 7, input: true, output: false },\n            ],\n            inputData: { array_a: a, array_b: b, meta: new Float32Array([m, n, k, m / 4, n / 4, k / 4, alpha]) },\n            threadGroups: { x: n / 64, y: m / 32, z: 1 }\n        };\n        const result = yield runner.run(request);\n        return result.outputData.array_c;\n    });\n}\nfunction sgemm_generic(m, n, k, alpha, a, b) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const shader = shader_sgemm_generic_1.Shader;\n        const cache_key = 'sgemm_generic';\n        let pipeline = runner.pipelineCache.get(cache_key);\n        if (!pipeline) {\n            pipeline = runner.createPipeline(shader, 4);\n            runner.pipelineCache.set(cache_key, pipeline);\n        }\n        const request = {\n            pipeline,\n            buffers: [\n                { index: 0, name: 'array_a', length: m * k, input: true, output: false },\n                { index: 1, name: 'array_b', length: k * n, input: true, output: false },\n                { index: 2, name: 'array_c', length: m * n, input: false, output: true },\n                { index: 3, name: 'meta', length: 4, input: true, output: false },\n            ],\n            inputData: { array_a: a, array_b: b, meta: new Float32Array([m, n, k, alpha]) },\n            threadGroups: { x: Math.ceil(n / 8), y: Math.ceil(m / 8), z: 1 }\n        };\n        const result = yield runner.run(request);\n        return result.outputData.array_c;\n    });\n}\nfunction sgemm(m, n, k, alpha, a, b, beta = 0.0, c) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (beta !== 0.0) {\n            throw new Error('beta !== 0.0 is not yet supported');\n        }\n        yield runner.init();\n        if (!runner.isSupportedDevice) {\n            // do fallback\n            throw new Error('unsupported device');\n        }\n        if (m % 32 === 0 && n % 64 === 0 && k % 4 === 0 && alpha === 1.0) {\n            return sgemm_block(m, n, k, alpha, a, b);\n        }\n        else {\n            return sgemm_generic(m, n, k, alpha, a, b);\n        }\n    });\n}\nexports.sgemm = sgemm;\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/sgemm_chrome.js?");

/***/ }),

/***/ "./node_modules/webgpu-blas/dist/sgemm_fallback.js":
/*!*********************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/sgemm_fallback.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sgemm = void 0;\nfunction sgemm(m, n, k, alpha, a, b, beta = 0.0, c) {\n    // To improve performance on WebGPU unsupported devices, use WebGL or WebAssembly\n    if (beta !== 0.0) {\n        throw new Error('beta !== 0.0 is not yet supported');\n    }\n    const result = new Float32Array(m * n);\n    for (let row = 0; row < m; row++) {\n        for (let col = 0; col < n; col++) {\n            let sum = 0.0;\n            for (let j = 0; j < k; j++) {\n                sum += a[row * k + j] * b[j * n + col];\n            }\n            result[row * n + col] = sum * alpha;\n        }\n    }\n    return result;\n}\nexports.sgemm = sgemm;\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/sgemm_fallback.js?");

/***/ }),

/***/ "./node_modules/webgpu-blas/dist/sgemm_wsl.js":
/*!****************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/sgemm_wsl.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// sgemm for Safari + WSL (iOS / MacOS)\n// WSL is deprecated and has many different parameters from Chrome's WebGPU, so separated.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sgemm = void 0;\nlet polyfillgpu_called = false;\nfunction polyfillgpu() {\n    if (polyfillgpu_called) {\n        return;\n    }\n    polyfillgpu_called = true;\n    if (!navigator.gpu) {\n        console.error('navigator.gpu not found');\n        return;\n    }\n    if (!GPUBufferUsage) {\n        console.error('GPUBufferUsage not found');\n    }\n    // Safari 13.0.3 -> Safari TP>92\n    if (GPUBufferUsage.COPY_SRC === undefined) {\n        GPUBufferUsage.COPY_DST = GPUBufferUsage.TRANSFER_DST;\n        GPUBufferUsage.COPY_SRC = GPUBufferUsage.TRANSFER_SRC;\n        window.GPUShaderStage = GPUShaderStageBit;\n    }\n}\nclass WebGPURunner {\n    constructor() {\n        this._initialized = false;\n        this.pipelineCache = new Map();\n        this.isSupportedDevice = false;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._initialized) {\n                return;\n            }\n            polyfillgpu();\n            try {\n                const adapter = yield navigator.gpu.requestAdapter();\n                this._device = yield adapter.requestDevice();\n                this.isSupportedDevice = true;\n            }\n            catch (ex) {\n                console.error('Unsupported device: ', ex.message);\n            }\n            this._initialized = true;\n        });\n    }\n    createPipeline(shader, nBuffers) {\n        const device = this._device;\n        const bindings = [];\n        for (let i = 0; i < nBuffers; i++) {\n            bindings.push({\n                binding: i,\n                visibility: GPUShaderStage.COMPUTE,\n                type: \"storage-buffer\"\n            });\n        }\n        const bindGroupLayout = device.createBindGroupLayout({\n            bindings\n        });\n        const pipelineLayout = device.createPipelineLayout({ bindGroupLayouts: [bindGroupLayout] });\n        const shaderModule = device.createShaderModule({ code: shader, isWHLSL: true });\n        const pipeline = device.createComputePipeline({\n            layout: pipelineLayout,\n            computeStage: {\n                module: shaderModule,\n                entryPoint: \"main\"\n            }\n        });\n        return { bindGroupLayout, pipeline };\n    }\n    run(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const device = this._device;\n            const buffers = request.buffers.map((bparam, i) => {\n                if (i !== bparam.index) {\n                    throw new Error('request.buffers is not sorted in order of index');\n                }\n                let usage = GPUBufferUsage.STORAGE;\n                if (bparam.input) {\n                    usage |= GPUBufferUsage.MAP_WRITE;\n                }\n                if (bparam.output) {\n                    usage |= GPUBufferUsage.MAP_READ;\n                }\n                const buf = device.createBuffer({\n                    size: bparam.length * Float32Array.BYTES_PER_ELEMENT,\n                    usage\n                });\n                return buf;\n            });\n            const bindGroup = device.createBindGroup({\n                layout: request.pipeline.bindGroupLayout,\n                bindings: request.buffers.map((bparam, i) => ({\n                    binding: i,\n                    resource: {\n                        buffer: buffers[i],\n                        size: bparam.length * Float32Array.BYTES_PER_ELEMENT\n                    }\n                }))\n            });\n            for (let i = 0; i < request.buffers.length; i++) {\n                const bparam = request.buffers[i];\n                if (bparam.input) {\n                    const buffer = buffers[i];\n                    const buffer_ab = yield buffer.mapWriteAsync();\n                    const buffer_mapped_array = new Float32Array(buffer_ab);\n                    const input_array = request.inputData[bparam.name];\n                    if (!input_array) {\n                        console.error(`input array '${bparam.name}' is not supplied.`);\n                        continue;\n                    }\n                    if (input_array.length !== buffer_mapped_array.length) {\n                        console.error(`length of input array '${bparam.name}' does not match GPU buffer (${input_array.length} !== ${buffer_mapped_array.length}).`);\n                        continue;\n                    }\n                    buffer_mapped_array.set(input_array);\n                    buffer.unmap();\n                }\n            }\n            const commandEncoder = device.createCommandEncoder();\n            const passEncoder = commandEncoder.beginComputePass();\n            passEncoder.setBindGroup(0, bindGroup);\n            passEncoder.setPipeline(request.pipeline.pipeline);\n            passEncoder.dispatch(request.threadGroups.x, request.threadGroups.y, request.threadGroups.z);\n            passEncoder.endPass();\n            device.getQueue().submit([commandEncoder.finish()]);\n            const outputs = {};\n            for (let i = 0; i < request.buffers.length; i++) {\n                const bparam = request.buffers[i];\n                if (bparam.output) {\n                    const buffer = buffers[i];\n                    const buffer_ab = yield buffer.mapReadAsync();\n                    const buffer_mapped_array = new Float32Array(buffer_ab);\n                    const result_array = new Float32Array(buffer_mapped_array);\n                    buffer.unmap();\n                    outputs[bparam.name] = result_array;\n                }\n            }\n            for (let i = 0; i < request.buffers.length; i++) {\n                const buffer = buffers[i];\n                buffer.destroy();\n            }\n            const result = {\n                outputData: outputs,\n            };\n            return result;\n        });\n    }\n}\nconst runner = new WebGPURunner();\nfunction sgemm_block(m, n, k, alpha, a, b) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const shader = `\r\n[numthreads(8, 8, 1)]\r\ncompute void main(constant float4[] array_a : register(u0),\r\n                  constant float4[] array_b : register(u1),\r\n                  device float4[] array_c : register(u2),\r\n                  constant float[] meta : register(u3),\r\n                  float3 dispatchThreadID : SV_DispatchThreadID)\r\n{\r\n  // threadgroups x: N / numthread.x / 8, y: M / numthread.y / 4\r\n  uint M = uint(meta[0]), N = uint(meta[1]), K = uint(meta[2]);\r\n  uint MD4 = uint(meta[3]), ND4 = uint(meta[4]), KD4 = uint(meta[5]);\r\n  float alpha = meta[6];\r\n  uint x = uint(dispatchThreadID.x);\r\n  uint y = uint(dispatchThreadID.y);\r\n  float4 sum0 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum1 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum2 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum3 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum10 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum11 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum12 = float4(0.0,0.0,0.0,0.0);\r\n  float4 sum13 = float4(0.0,0.0,0.0,0.0);\r\n  for(uint k=0;k<KD4;k++) {\r\n    float4 arow0 = array_a[(y * 4 + 0) * KD4 + k];\r\n    float4 arow1 = array_a[(y * 4 + 1) * KD4 + k];\r\n    float4 arow2 = array_a[(y * 4 + 2) * KD4 + k];\r\n    float4 arow3 = array_a[(y * 4 + 3) * KD4 + k];\r\n    float4 brow;\r\n    brow = array_b[(k * 4 + 0) * ND4 + x * 2 + 0];\r\n    sum0 = mad(float4(arow0.x,arow0.x,arow0.x,arow0.x), brow, sum0);\r\n    sum1 = mad(float4(arow1.x,arow1.x,arow1.x,arow1.x), brow, sum1);\r\n    sum2 = mad(float4(arow2.x,arow2.x,arow2.x,arow2.x), brow, sum2);\r\n    sum3 = mad(float4(arow3.x,arow3.x,arow3.x,arow3.x), brow, sum3);\r\n    brow = array_b[(k * 4 + 0) * ND4 + x * 2 + 1];\r\n    sum10 = mad(float4(arow0.x,arow0.x,arow0.x,arow0.x), brow, sum10);\r\n    sum11 = mad(float4(arow1.x,arow1.x,arow1.x,arow1.x), brow, sum11);\r\n    sum12 = mad(float4(arow2.x,arow2.x,arow2.x,arow2.x), brow, sum12);\r\n    sum13 = mad(float4(arow3.x,arow3.x,arow3.x,arow3.x), brow, sum13);\r\n    brow = array_b[(k * 4 + 1) * ND4 + x * 2 + 0];\r\n    sum0 = mad(float4(arow0.y,arow0.y,arow0.y,arow0.y), brow, sum0);\r\n    sum1 = mad(float4(arow1.y,arow1.y,arow1.y,arow1.y), brow, sum1);\r\n    sum2 = mad(float4(arow2.y,arow2.y,arow2.y,arow2.y), brow, sum2);\r\n    sum3 = mad(float4(arow3.y,arow3.y,arow3.y,arow3.y), brow, sum3);\r\n    brow = array_b[(k * 4 + 1) * ND4 + x * 2 + 1];\r\n    sum10 = mad(float4(arow0.y,arow0.y,arow0.y,arow0.y), brow, sum10);\r\n    sum11 = mad(float4(arow1.y,arow1.y,arow1.y,arow1.y), brow, sum11);\r\n    sum12 = mad(float4(arow2.y,arow2.y,arow2.y,arow2.y), brow, sum12);\r\n    sum13 = mad(float4(arow3.y,arow3.y,arow3.y,arow3.y), brow, sum13);\r\n    brow = array_b[(k * 4 + 2) * ND4 + x * 2 + 0];\r\n    sum0 = mad(float4(arow0.z,arow0.z,arow0.z,arow0.z), brow, sum0);\r\n    sum1 = mad(float4(arow1.z,arow1.z,arow1.z,arow1.z), brow, sum1);\r\n    sum2 = mad(float4(arow2.z,arow2.z,arow2.z,arow2.z), brow, sum2);\r\n    sum3 = mad(float4(arow3.z,arow3.z,arow3.z,arow3.z), brow, sum3);\r\n    brow = array_b[(k * 4 + 2) * ND4 + x * 2 + 1];\r\n    sum10 = mad(float4(arow0.z,arow0.z,arow0.z,arow0.z), brow, sum10);\r\n    sum11 = mad(float4(arow1.z,arow1.z,arow1.z,arow1.z), brow, sum11);\r\n    sum12 = mad(float4(arow2.z,arow2.z,arow2.z,arow2.z), brow, sum12);\r\n    sum13 = mad(float4(arow3.z,arow3.z,arow3.z,arow3.z), brow, sum13);\r\n    brow = array_b[(k * 4 + 3) * ND4 + x * 2 + 0];\r\n    sum0 = mad(float4(arow0.w,arow0.w,arow0.w,arow0.w), brow, sum0);\r\n    sum1 = mad(float4(arow1.w,arow1.w,arow1.w,arow1.w), brow, sum1);\r\n    sum2 = mad(float4(arow2.w,arow2.w,arow2.w,arow2.w), brow, sum2);\r\n    sum3 = mad(float4(arow3.w,arow3.w,arow3.w,arow3.w), brow, sum3);\r\n    brow = array_b[(k * 4 + 3) * ND4 + x * 2 + 1];\r\n    sum10 = mad(float4(arow0.w,arow0.w,arow0.w,arow0.w), brow, sum10);\r\n    sum11 = mad(float4(arow1.w,arow1.w,arow1.w,arow1.w), brow, sum11);\r\n    sum12 = mad(float4(arow2.w,arow2.w,arow2.w,arow2.w), brow, sum12);\r\n    sum13 = mad(float4(arow3.w,arow3.w,arow3.w,arow3.w), brow, sum13);\r\n  }\r\n    array_c[x * 2 + 0 + (y * 4 + 0) * ND4] = sum0 * alpha;\r\n    array_c[x * 2 + 0 + (y * 4 + 1) * ND4] = sum1 * alpha;\r\n    array_c[x * 2 + 0 + (y * 4 + 2) * ND4] = sum2 * alpha;\r\n    array_c[x * 2 + 0 + (y * 4 + 3) * ND4] = sum3 * alpha;\r\n    array_c[x * 2 + 1 + (y * 4 + 0) * ND4] = sum10 * alpha;\r\n    array_c[x * 2 + 1 + (y * 4 + 1) * ND4] = sum11 * alpha;\r\n    array_c[x * 2 + 1 + (y * 4 + 2) * ND4] = sum12 * alpha;\r\n    array_c[x * 2 + 1 + (y * 4 + 3) * ND4] = sum13 * alpha;\r\n}\r\n`;\n        const cache_key = 'sgemm_block';\n        let pipeline = runner.pipelineCache.get(cache_key);\n        if (!pipeline) {\n            pipeline = runner.createPipeline(shader, 4);\n            runner.pipelineCache.set(cache_key, pipeline);\n        }\n        const request = {\n            pipeline,\n            buffers: [\n                { index: 0, name: 'array_a', length: m * k, input: true, output: false },\n                { index: 1, name: 'array_b', length: k * n, input: true, output: false },\n                { index: 2, name: 'array_c', length: m * n, input: false, output: true },\n                { index: 3, name: 'meta', length: 7, input: true, output: false },\n            ],\n            inputData: { array_a: a, array_b: b, meta: new Float32Array([m, n, k, m / 4, n / 4, k / 4, alpha]) },\n            threadGroups: { x: n / 64, y: m / 32, z: 1 }\n        };\n        const result = yield runner.run(request);\n        return result.outputData.array_c;\n    });\n}\nfunction sgemm_generic(m, n, k, alpha, a, b) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const shader = `\r\n[numthreads(8, 8, 1)]\r\ncompute void main(constant float[] array_a : register(u0),\r\n                  constant float[] array_b : register(u1),\r\n                  device float[] array_c : register(u2),\r\n                  constant float[] meta : register(u3),\r\n                  float3 dispatchThreadID : SV_DispatchThreadID)\r\n{\r\n  // threadgroups x: M / numthread.x, y: N / numthread.y\r\n  uint M = uint(meta[0]), N = uint(meta[1]), K = uint(meta[2]);\r\n  uint x = uint(dispatchThreadID.x);\r\n  uint y = uint(dispatchThreadID.y);\r\n  if (x >= N || y >= M) {\r\n    return;\r\n  }\r\n  float sum = 0.0;\r\n  for(uint k=0;k<K;k++) {\r\n    sum += array_a[y * K + k] * array_b[k * N + x];\r\n  }\r\n  float alpha = meta[3];\r\n    array_c[x + y * N] = sum * alpha;\r\n}\r\n`;\n        const cache_key = 'sgemm_generic';\n        let pipeline = runner.pipelineCache.get(cache_key);\n        if (!pipeline) {\n            pipeline = runner.createPipeline(shader, 4);\n            runner.pipelineCache.set(cache_key, pipeline);\n        }\n        const request = {\n            pipeline,\n            buffers: [\n                { index: 0, name: 'array_a', length: m * k, input: true, output: false },\n                { index: 1, name: 'array_b', length: k * n, input: true, output: false },\n                { index: 2, name: 'array_c', length: m * n, input: false, output: true },\n                { index: 3, name: 'meta', length: 4, input: true, output: false },\n            ],\n            inputData: { array_a: a, array_b: b, meta: new Float32Array([m, n, k, alpha]) },\n            threadGroups: { x: Math.ceil(n / 8), y: Math.ceil(m / 8), z: 1 }\n        };\n        const result = yield runner.run(request);\n        return result.outputData.array_c;\n    });\n}\nfunction sgemm(m, n, k, alpha, a, b, beta = 0.0, c) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (beta !== 0.0) {\n            throw new Error('beta !== 0.0 is not yet supported');\n        }\n        yield runner.init();\n        if (!runner.isSupportedDevice) {\n            // do fallback\n            throw new Error('unsupported device');\n        }\n        if (m % 32 === 0 && n % 64 === 0 && k % 4 === 0 && alpha === 1.0) {\n            return sgemm_block(m, n, k, alpha, a, b);\n        }\n        else {\n            return sgemm_generic(m, n, k, alpha, a, b);\n        }\n    });\n}\nexports.sgemm = sgemm;\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/sgemm_wsl.js?");

/***/ }),

/***/ "./node_modules/webgpu-blas/dist/shader_sgemm_block.js":
/*!*************************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/shader_sgemm_block.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shader = void 0;\nexports.Shader = new Uint32Array([119734787, 66304, 524295, 753, 0, 131089, 1, 393227, 1, 1280527431, 1685353262, 808793134, 0, 196622, 0, 1, 393231, 5, 4, 1852399981, 0, 53, 393232, 4, 17, 8, 8, 1, 196611, 2, 450, 262149, 4, 1852399981, 0, 196613, 8, 77, 327685, 11, 1634890337, 1952796025, 97, 327686, 11, 0, 1651340654, 7565925, 262149, 13, 1635018093, 0, 196613, 20, 78, 196613, 25, 75, 196613, 30, 3425357, 196613, 35, 3425358, 196613, 40, 3425355, 262149, 46, 1752198241, 97, 196613, 50, 120, 524293, 53, 1197436007, 1633841004, 1986939244, 1952539503, 1231974249, 68, 196613, 58, 121, 262149, 64, 812479859, 0, 262149, 67, 829257075, 0, 262149, 68, 846034291, 0, 262149, 69, 862811507, 0, 262149, 70, 829257075, 48, 262149, 71, 829257075, 49, 262149, 72, 829257075, 50, 262149, 73, 829257075, 51, 196613, 74, 107, 262149, 84, 2003792481, 48, 262149, 86, 1634890337, 16761, 327686, 86, 0, 1651340654, 7565925, 262149, 88, 1634890337, 6381433, 262149, 100, 2003792481, 49, 262149, 110, 2003792481, 50, 262149, 121, 2003792481, 51, 262149, 132, 2003792482, 0, 262149, 134, 1634890337, 17017, 327686, 134, 0, 1651340654, 7565925, 262149, 136, 1634890337, 6446969, 262149, 644, 1634890337, 17273, 327686, 644, 0, 1651340654, 7565925, 262149, 646, 1634890337, 6512505, 262215, 10, 6, 4, 262216, 11, 0, 24, 327752, 11, 0, 35, 0, 196679, 11, 2, 262215, 13, 34, 0, 262215, 13, 33, 3, 262215, 53, 11, 28, 262215, 85, 6, 16, 262216, 86, 0, 24, 327752, 86, 0, 35, 0, 196679, 86, 2, 262215, 88, 34, 0, 262215, 88, 33, 0, 262215, 133, 6, 16, 262216, 134, 0, 24, 327752, 134, 0, 35, 0, 196679, 134, 2, 262215, 136, 34, 0, 262215, 136, 33, 1, 262215, 643, 6, 16, 327752, 644, 0, 35, 0, 196679, 644, 2, 262215, 646, 34, 0, 262215, 646, 33, 2, 262215, 752, 11, 25, 131091, 2, 196641, 3, 2, 262165, 6, 32, 0, 262176, 7, 7, 6, 196630, 9, 32, 196637, 10, 9, 196638, 11, 10, 262176, 12, 12, 11, 262203, 12, 13, 12, 262165, 14, 32, 1, 262187, 14, 15, 0, 262176, 16, 12, 9, 262187, 14, 21, 1, 262187, 14, 26, 2, 262187, 14, 31, 3, 262187, 14, 36, 4, 262187, 14, 41, 5, 262176, 45, 7, 9, 262187, 14, 47, 6, 262167, 51, 6, 3, 262176, 52, 1, 51, 262203, 52, 53, 1, 262187, 6, 54, 0, 262176, 55, 1, 6, 262187, 6, 59, 1, 262167, 62, 9, 4, 262176, 63, 7, 62, 262187, 9, 65, 0, 458796, 62, 66, 65, 65, 65, 65, 131092, 82, 196637, 85, 62, 196638, 86, 85, 262176, 87, 12, 86, 262203, 87, 88, 12, 262187, 6, 90, 4, 262176, 97, 12, 62, 262187, 6, 113, 2, 262187, 6, 124, 3, 196637, 133, 62, 196638, 134, 133, 262176, 135, 12, 134, 262203, 135, 136, 12, 196637, 643, 62, 196638, 644, 643, 262176, 645, 12, 644, 262203, 645, 646, 12, 262187, 6, 751, 8, 393260, 51, 752, 751, 751, 59, 327734, 2, 4, 0, 3, 131320, 5, 262203, 7, 8, 7, 262203, 7, 20, 7, 262203, 7, 25, 7, 262203, 7, 30, 7, 262203, 7, 35, 7, 262203, 7, 40, 7, 262203, 45, 46, 7, 262203, 7, 50, 7, 262203, 7, 58, 7, 262203, 63, 64, 7, 262203, 63, 67, 7, 262203, 63, 68, 7, 262203, 63, 69, 7, 262203, 63, 70, 7, 262203, 63, 71, 7, 262203, 63, 72, 7, 262203, 63, 73, 7, 262203, 7, 74, 7, 262203, 63, 84, 7, 262203, 63, 100, 7, 262203, 63, 110, 7, 262203, 63, 121, 7, 262203, 63, 132, 7, 393281, 16, 17, 13, 15, 15, 262205, 9, 18, 17, 262253, 6, 19, 18, 196670, 8, 19, 393281, 16, 22, 13, 15, 21, 262205, 9, 23, 22, 262253, 6, 24, 23, 196670, 20, 24, 393281, 16, 27, 13, 15, 26, 262205, 9, 28, 27, 262253, 6, 29, 28, 196670, 25, 29, 393281, 16, 32, 13, 15, 31, 262205, 9, 33, 32, 262253, 6, 34, 33, 196670, 30, 34, 393281, 16, 37, 13, 15, 36, 262205, 9, 38, 37, 262253, 6, 39, 38, 196670, 35, 39, 393281, 16, 42, 13, 15, 41, 262205, 9, 43, 42, 262253, 6, 44, 43, 196670, 40, 44, 393281, 16, 48, 13, 15, 47, 262205, 9, 49, 48, 196670, 46, 49, 327745, 55, 56, 53, 54, 262205, 6, 57, 56, 196670, 50, 57, 327745, 55, 60, 53, 59, 262205, 6, 61, 60, 196670, 58, 61, 196670, 64, 66, 196670, 67, 66, 196670, 68, 66, 196670, 69, 66, 196670, 70, 66, 196670, 71, 66, 196670, 72, 66, 196670, 73, 66, 196670, 74, 54, 131321, 75, 131320, 75, 262390, 77, 78, 0, 131321, 79, 131320, 79, 262205, 6, 80, 74, 262205, 6, 81, 40, 327856, 82, 83, 80, 81, 262394, 83, 76, 77, 131320, 76, 262205, 6, 89, 58, 327812, 6, 91, 89, 90, 327808, 6, 92, 91, 54, 262205, 6, 93, 40, 327812, 6, 94, 92, 93, 262205, 6, 95, 74, 327808, 6, 96, 94, 95, 393281, 97, 98, 88, 15, 96, 262205, 62, 99, 98, 196670, 84, 99, 262205, 6, 101, 58, 327812, 6, 102, 101, 90, 327808, 6, 103, 102, 59, 262205, 6, 104, 40, 327812, 6, 105, 103, 104, 262205, 6, 106, 74, 327808, 6, 107, 105, 106, 393281, 97, 108, 88, 15, 107, 262205, 62, 109, 108, 196670, 100, 109, 262205, 6, 111, 58, 327812, 6, 112, 111, 90, 327808, 6, 114, 112, 113, 262205, 6, 115, 40, 327812, 6, 116, 114, 115, 262205, 6, 117, 74, 327808, 6, 118, 116, 117, 393281, 97, 119, 88, 15, 118, 262205, 62, 120, 119, 196670, 110, 120, 262205, 6, 122, 58, 327812, 6, 123, 122, 90, 327808, 6, 125, 123, 124, 262205, 6, 126, 40, 327812, 6, 127, 125, 126, 262205, 6, 128, 74, 327808, 6, 129, 127, 128, 393281, 97, 130, 88, 15, 129, 262205, 62, 131, 130, 196670, 121, 131, 262205, 6, 137, 74, 327812, 6, 138, 137, 90, 327808, 6, 139, 138, 54, 262205, 6, 140, 35, 327812, 6, 141, 139, 140, 262205, 6, 142, 50, 327812, 6, 143, 142, 113, 327808, 6, 144, 141, 143, 327808, 6, 145, 144, 54, 393281, 97, 146, 136, 15, 145, 262205, 62, 147, 146, 196670, 132, 147, 327745, 45, 148, 84, 54, 262205, 9, 149, 148, 327745, 45, 150, 84, 54, 262205, 9, 151, 150, 327745, 45, 152, 84, 54, 262205, 9, 153, 152, 327745, 45, 154, 84, 54, 262205, 9, 155, 154, 458832, 62, 156, 149, 151, 153, 155, 262205, 62, 157, 132, 327813, 62, 158, 156, 157, 262205, 62, 159, 64, 327809, 62, 160, 158, 159, 196670, 64, 160, 327745, 45, 161, 100, 54, 262205, 9, 162, 161, 327745, 45, 163, 100, 54, 262205, 9, 164, 163, 327745, 45, 165, 100, 54, 262205, 9, 166, 165, 327745, 45, 167, 100, 54, 262205, 9, 168, 167, 458832, 62, 169, 162, 164, 166, 168, 262205, 62, 170, 132, 327813, 62, 171, 169, 170, 262205, 62, 172, 67, 327809, 62, 173, 171, 172, 196670, 67, 173, 327745, 45, 174, 110, 54, 262205, 9, 175, 174, 327745, 45, 176, 110, 54, 262205, 9, 177, 176, 327745, 45, 178, 110, 54, 262205, 9, 179, 178, 327745, 45, 180, 110, 54, 262205, 9, 181, 180, 458832, 62, 182, 175, 177, 179, 181, 262205, 62, 183, 132, 327813, 62, 184, 182, 183, 262205, 62, 185, 68, 327809, 62, 186, 184, 185, 196670, 68, 186, 327745, 45, 187, 121, 54, 262205, 9, 188, 187, 327745, 45, 189, 121, 54, 262205, 9, 190, 189, 327745, 45, 191, 121, 54, 262205, 9, 192, 191, 327745, 45, 193, 121, 54, 262205, 9, 194, 193, 458832, 62, 195, 188, 190, 192, 194, 262205, 62, 196, 132, 327813, 62, 197, 195, 196, 262205, 62, 198, 69, 327809, 62, 199, 197, 198, 196670, 69, 199, 262205, 6, 200, 74, 327812, 6, 201, 200, 90, 327808, 6, 202, 201, 54, 262205, 6, 203, 35, 327812, 6, 204, 202, 203, 262205, 6, 205, 50, 327812, 6, 206, 205, 113, 327808, 6, 207, 204, 206, 327808, 6, 208, 207, 59, 393281, 97, 209, 136, 15, 208, 262205, 62, 210, 209, 196670, 132, 210, 327745, 45, 211, 84, 54, 262205, 9, 212, 211, 327745, 45, 213, 84, 54, 262205, 9, 214, 213, 327745, 45, 215, 84, 54, 262205, 9, 216, 215, 327745, 45, 217, 84, 54, 262205, 9, 218, 217, 458832, 62, 219, 212, 214, 216, 218, 262205, 62, 220, 132, 327813, 62, 221, 219, 220, 262205, 62, 222, 70, 327809, 62, 223, 221, 222, 196670, 70, 223, 327745, 45, 224, 100, 54, 262205, 9, 225, 224, 327745, 45, 226, 100, 54, 262205, 9, 227, 226, 327745, 45, 228, 100, 54, 262205, 9, 229, 228, 327745, 45, 230, 100, 54, 262205, 9, 231, 230, 458832, 62, 232, 225, 227, 229, 231, 262205, 62, 233, 132, 327813, 62, 234, 232, 233, 262205, 62, 235, 71, 327809, 62, 236, 234, 235, 196670, 71, 236, 327745, 45, 237, 110, 54, 262205, 9, 238, 237, 327745, 45, 239, 110, 54, 262205, 9, 240, 239, 327745, 45, 241, 110, 54, 262205, 9, 242, 241, 327745, 45, 243, 110, 54, 262205, 9, 244, 243, 458832, 62, 245, 238, 240, 242, 244, 262205, 62, 246, 132, 327813, 62, 247, 245, 246, 262205, 62, 248, 72, 327809, 62, 249, 247, 248, 196670, 72, 249, 327745, 45, 250, 121, 54, 262205, 9, 251, 250, 327745, 45, 252, 121, 54, 262205, 9, 253, 252, 327745, 45, 254, 121, 54, 262205, 9, 255, 254, 327745, 45, 256, 121, 54, 262205, 9, 257, 256, 458832, 62, 258, 251, 253, 255, 257, 262205, 62, 259, 132, 327813, 62, 260, 258, 259, 262205, 62, 261, 73, 327809, 62, 262, 260, 261, 196670, 73, 262, 262205, 6, 263, 74, 327812, 6, 264, 263, 90, 327808, 6, 265, 264, 59, 262205, 6, 266, 35, 327812, 6, 267, 265, 266, 262205, 6, 268, 50, 327812, 6, 269, 268, 113, 327808, 6, 270, 267, 269, 327808, 6, 271, 270, 54, 393281, 97, 272, 136, 15, 271, 262205, 62, 273, 272, 196670, 132, 273, 327745, 45, 274, 84, 59, 262205, 9, 275, 274, 327745, 45, 276, 84, 59, 262205, 9, 277, 276, 327745, 45, 278, 84, 59, 262205, 9, 279, 278, 327745, 45, 280, 84, 59, 262205, 9, 281, 280, 458832, 62, 282, 275, 277, 279, 281, 262205, 62, 283, 132, 327813, 62, 284, 282, 283, 262205, 62, 285, 64, 327809, 62, 286, 284, 285, 196670, 64, 286, 327745, 45, 287, 100, 59, 262205, 9, 288, 287, 327745, 45, 289, 100, 59, 262205, 9, 290, 289, 327745, 45, 291, 100, 59, 262205, 9, 292, 291, 327745, 45, 293, 100, 59, 262205, 9, 294, 293, 458832, 62, 295, 288, 290, 292, 294, 262205, 62, 296, 132, 327813, 62, 297, 295, 296, 262205, 62, 298, 67, 327809, 62, 299, 297, 298, 196670, 67, 299, 327745, 45, 300, 110, 59, 262205, 9, 301, 300, 327745, 45, 302, 110, 59, 262205, 9, 303, 302, 327745, 45, 304, 110, 59, 262205, 9, 305, 304, 327745, 45, 306, 110, 59, 262205, 9, 307, 306, 458832, 62, 308, 301, 303, 305, 307, 262205, 62, 309, 132, 327813, 62, 310, 308, 309, 262205, 62, 311, 68, 327809, 62, 312, 310, 311, 196670, 68, 312, 327745, 45, 313, 121, 59, 262205, 9, 314, 313, 327745, 45, 315, 121, 59, 262205, 9, 316, 315, 327745, 45, 317, 121, 59, 262205, 9, 318, 317, 327745, 45, 319, 121, 59, 262205, 9, 320, 319, 458832, 62, 321, 314, 316, 318, 320, 262205, 62, 322, 132, 327813, 62, 323, 321, 322, 262205, 62, 324, 69, 327809, 62, 325, 323, 324, 196670, 69, 325, 262205, 6, 326, 74, 327812, 6, 327, 326, 90, 327808, 6, 328, 327, 59, 262205, 6, 329, 35, 327812, 6, 330, 328, 329, 262205, 6, 331, 50, 327812, 6, 332, 331, 113, 327808, 6, 333, 330, 332, 327808, 6, 334, 333, 59, 393281, 97, 335, 136, 15, 334, 262205, 62, 336, 335, 196670, 132, 336, 327745, 45, 337, 84, 59, 262205, 9, 338, 337, 327745, 45, 339, 84, 59, 262205, 9, 340, 339, 327745, 45, 341, 84, 59, 262205, 9, 342, 341, 327745, 45, 343, 84, 59, 262205, 9, 344, 343, 458832, 62, 345, 338, 340, 342, 344, 262205, 62, 346, 132, 327813, 62, 347, 345, 346, 262205, 62, 348, 70, 327809, 62, 349, 347, 348, 196670, 70, 349, 327745, 45, 350, 100, 59, 262205, 9, 351, 350, 327745, 45, 352, 100, 59, 262205, 9, 353, 352, 327745, 45, 354, 100, 59, 262205, 9, 355, 354, 327745, 45, 356, 100, 59, 262205, 9, 357, 356, 458832, 62, 358, 351, 353, 355, 357, 262205, 62, 359, 132, 327813, 62, 360, 358, 359, 262205, 62, 361, 71, 327809, 62, 362, 360, 361, 196670, 71, 362, 327745, 45, 363, 110, 59, 262205, 9, 364, 363, 327745, 45, 365, 110, 59, 262205, 9, 366, 365, 327745, 45, 367, 110, 59, 262205, 9, 368, 367, 327745, 45, 369, 110, 59, 262205, 9, 370, 369, 458832, 62, 371, 364, 366, 368, 370, 262205, 62, 372, 132, 327813, 62, 373, 371, 372, 262205, 62, 374, 72, 327809, 62, 375, 373, 374, 196670, 72, 375, 327745, 45, 376, 121, 59, 262205, 9, 377, 376, 327745, 45, 378, 121, 59, 262205, 9, 379, 378, 327745, 45, 380, 121, 59, 262205, 9, 381, 380, 327745, 45, 382, 121, 59, 262205, 9, 383, 382, 458832, 62, 384, 377, 379, 381, 383, 262205, 62, 385, 132, 327813, 62, 386, 384, 385, 262205, 62, 387, 73, 327809, 62, 388, 386, 387, 196670, 73, 388, 262205, 6, 389, 74, 327812, 6, 390, 389, 90, 327808, 6, 391, 390, 113, 262205, 6, 392, 35, 327812, 6, 393, 391, 392, 262205, 6, 394, 50, 327812, 6, 395, 394, 113, 327808, 6, 396, 393, 395, 327808, 6, 397, 396, 54, 393281, 97, 398, 136, 15, 397, 262205, 62, 399, 398, 196670, 132, 399, 327745, 45, 400, 84, 113, 262205, 9, 401, 400, 327745, 45, 402, 84, 113, 262205, 9, 403, 402, 327745, 45, 404, 84, 113, 262205, 9, 405, 404, 327745, 45, 406, 84, 113, 262205, 9, 407, 406, 458832, 62, 408, 401, 403, 405, 407, 262205, 62, 409, 132, 327813, 62, 410, 408, 409, 262205, 62, 411, 64, 327809, 62, 412, 410, 411, 196670, 64, 412, 327745, 45, 413, 100, 113, 262205, 9, 414, 413, 327745, 45, 415, 100, 113, 262205, 9, 416, 415, 327745, 45, 417, 100, 113, 262205, 9, 418, 417, 327745, 45, 419, 100, 113, 262205, 9, 420, 419, 458832, 62, 421, 414, 416, 418, 420, 262205, 62, 422, 132, 327813, 62, 423, 421, 422, 262205, 62, 424, 67, 327809, 62, 425, 423, 424, 196670, 67, 425, 327745, 45, 426, 110, 113, 262205, 9, 427, 426, 327745, 45, 428, 110, 113, 262205, 9, 429, 428, 327745, 45, 430, 110, 113, 262205, 9, 431, 430, 327745, 45, 432, 110, 113, 262205, 9, 433, 432, 458832, 62, 434, 427, 429, 431, 433, 262205, 62, 435, 132, 327813, 62, 436, 434, 435, 262205, 62, 437, 68, 327809, 62, 438, 436, 437, 196670, 68, 438, 327745, 45, 439, 121, 113, 262205, 9, 440, 439, 327745, 45, 441, 121, 113, 262205, 9, 442, 441, 327745, 45, 443, 121, 113, 262205, 9, 444, 443, 327745, 45, 445, 121, 113, 262205, 9, 446, 445, 458832, 62, 447, 440, 442, 444, 446, 262205, 62, 448, 132, 327813, 62, 449, 447, 448, 262205, 62, 450, 69, 327809, 62, 451, 449, 450, 196670, 69, 451, 262205, 6, 452, 74, 327812, 6, 453, 452, 90, 327808, 6, 454, 453, 113, 262205, 6, 455, 35, 327812, 6, 456, 454, 455, 262205, 6, 457, 50, 327812, 6, 458, 457, 113, 327808, 6, 459, 456, 458, 327808, 6, 460, 459, 59, 393281, 97, 461, 136, 15, 460, 262205, 62, 462, 461, 196670, 132, 462, 327745, 45, 463, 84, 113, 262205, 9, 464, 463, 327745, 45, 465, 84, 113, 262205, 9, 466, 465, 327745, 45, 467, 84, 113, 262205, 9, 468, 467, 327745, 45, 469, 84, 113, 262205, 9, 470, 469, 458832, 62, 471, 464, 466, 468, 470, 262205, 62, 472, 132, 327813, 62, 473, 471, 472, 262205, 62, 474, 70, 327809, 62, 475, 473, 474, 196670, 70, 475, 327745, 45, 476, 100, 113, 262205, 9, 477, 476, 327745, 45, 478, 100, 113, 262205, 9, 479, 478, 327745, 45, 480, 100, 113, 262205, 9, 481, 480, 327745, 45, 482, 100, 113, 262205, 9, 483, 482, 458832, 62, 484, 477, 479, 481, 483, 262205, 62, 485, 132, 327813, 62, 486, 484, 485, 262205, 62, 487, 71, 327809, 62, 488, 486, 487, 196670, 71, 488, 327745, 45, 489, 110, 113, 262205, 9, 490, 489, 327745, 45, 491, 110, 113, 262205, 9, 492, 491, 327745, 45, 493, 110, 113, 262205, 9, 494, 493, 327745, 45, 495, 110, 113, 262205, 9, 496, 495, 458832, 62, 497, 490, 492, 494, 496, 262205, 62, 498, 132, 327813, 62, 499, 497, 498, 262205, 62, 500, 72, 327809, 62, 501, 499, 500, 196670, 72, 501, 327745, 45, 502, 121, 113, 262205, 9, 503, 502, 327745, 45, 504, 121, 113, 262205, 9, 505, 504, 327745, 45, 506, 121, 113, 262205, 9, 507, 506, 327745, 45, 508, 121, 113, 262205, 9, 509, 508, 458832, 62, 510, 503, 505, 507, 509, 262205, 62, 511, 132, 327813, 62, 512, 510, 511, 262205, 62, 513, 73, 327809, 62, 514, 512, 513, 196670, 73, 514, 262205, 6, 515, 74, 327812, 6, 516, 515, 90, 327808, 6, 517, 516, 124, 262205, 6, 518, 35, 327812, 6, 519, 517, 518, 262205, 6, 520, 50, 327812, 6, 521, 520, 113, 327808, 6, 522, 519, 521, 327808, 6, 523, 522, 54, 393281, 97, 524, 136, 15, 523, 262205, 62, 525, 524, 196670, 132, 525, 327745, 45, 526, 84, 124, 262205, 9, 527, 526, 327745, 45, 528, 84, 124, 262205, 9, 529, 528, 327745, 45, 530, 84, 124, 262205, 9, 531, 530, 327745, 45, 532, 84, 124, 262205, 9, 533, 532, 458832, 62, 534, 527, 529, 531, 533, 262205, 62, 535, 132, 327813, 62, 536, 534, 535, 262205, 62, 537, 64, 327809, 62, 538, 536, 537, 196670, 64, 538, 327745, 45, 539, 100, 124, 262205, 9, 540, 539, 327745, 45, 541, 100, 124, 262205, 9, 542, 541, 327745, 45, 543, 100, 124, 262205, 9, 544, 543, 327745, 45, 545, 100, 124, 262205, 9, 546, 545, 458832, 62, 547, 540, 542, 544, 546, 262205, 62, 548, 132, 327813, 62, 549, 547, 548, 262205, 62, 550, 67, 327809, 62, 551, 549, 550, 196670, 67, 551, 327745, 45, 552, 110, 124, 262205, 9, 553, 552, 327745, 45, 554, 110, 124, 262205, 9, 555, 554, 327745, 45, 556, 110, 124, 262205, 9, 557, 556, 327745, 45, 558, 110, 124, 262205, 9, 559, 558, 458832, 62, 560, 553, 555, 557, 559, 262205, 62, 561, 132, 327813, 62, 562, 560, 561, 262205, 62, 563, 68, 327809, 62, 564, 562, 563, 196670, 68, 564, 327745, 45, 565, 121, 124, 262205, 9, 566, 565, 327745, 45, 567, 121, 124, 262205, 9, 568, 567, 327745, 45, 569, 121, 124, 262205, 9, 570, 569, 327745, 45, 571, 121, 124, 262205, 9, 572, 571, 458832, 62, 573, 566, 568, 570, 572, 262205, 62, 574, 132, 327813, 62, 575, 573, 574, 262205, 62, 576, 69, 327809, 62, 577, 575, 576, 196670, 69, 577, 262205, 6, 578, 74, 327812, 6, 579, 578, 90, 327808, 6, 580, 579, 124, 262205, 6, 581, 35, 327812, 6, 582, 580, 581, 262205, 6, 583, 50, 327812, 6, 584, 583, 113, 327808, 6, 585, 582, 584, 327808, 6, 586, 585, 59, 393281, 97, 587, 136, 15, 586, 262205, 62, 588, 587, 196670, 132, 588, 327745, 45, 589, 84, 124, 262205, 9, 590, 589, 327745, 45, 591, 84, 124, 262205, 9, 592, 591, 327745, 45, 593, 84, 124, 262205, 9, 594, 593, 327745, 45, 595, 84, 124, 262205, 9, 596, 595, 458832, 62, 597, 590, 592, 594, 596, 262205, 62, 598, 132, 327813, 62, 599, 597, 598, 262205, 62, 600, 70, 327809, 62, 601, 599, 600, 196670, 70, 601, 327745, 45, 602, 100, 124, 262205, 9, 603, 602, 327745, 45, 604, 100, 124, 262205, 9, 605, 604, 327745, 45, 606, 100, 124, 262205, 9, 607, 606, 327745, 45, 608, 100, 124, 262205, 9, 609, 608, 458832, 62, 610, 603, 605, 607, 609, 262205, 62, 611, 132, 327813, 62, 612, 610, 611, 262205, 62, 613, 71, 327809, 62, 614, 612, 613, 196670, 71, 614, 327745, 45, 615, 110, 124, 262205, 9, 616, 615, 327745, 45, 617, 110, 124, 262205, 9, 618, 617, 327745, 45, 619, 110, 124, 262205, 9, 620, 619, 327745, 45, 621, 110, 124, 262205, 9, 622, 621, 458832, 62, 623, 616, 618, 620, 622, 262205, 62, 624, 132, 327813, 62, 625, 623, 624, 262205, 62, 626, 72, 327809, 62, 627, 625, 626, 196670, 72, 627, 327745, 45, 628, 121, 124, 262205, 9, 629, 628, 327745, 45, 630, 121, 124, 262205, 9, 631, 630, 327745, 45, 632, 121, 124, 262205, 9, 633, 632, 327745, 45, 634, 121, 124, 262205, 9, 635, 634, 458832, 62, 636, 629, 631, 633, 635, 262205, 62, 637, 132, 327813, 62, 638, 636, 637, 262205, 62, 639, 73, 327809, 62, 640, 638, 639, 196670, 73, 640, 131321, 78, 131320, 78, 262205, 6, 641, 74, 327808, 6, 642, 641, 21, 196670, 74, 642, 131321, 75, 131320, 77, 262205, 6, 647, 50, 327812, 6, 648, 647, 113, 327808, 6, 649, 648, 54, 262205, 6, 650, 58, 327812, 6, 651, 650, 90, 327808, 6, 652, 651, 54, 262205, 6, 653, 35, 327812, 6, 654, 652, 653, 327808, 6, 655, 649, 654, 262205, 62, 656, 64, 262205, 9, 657, 46, 327822, 62, 658, 656, 657, 393281, 97, 659, 646, 15, 655, 196670, 659, 658, 262205, 6, 660, 50, 327812, 6, 661, 660, 113, 327808, 6, 662, 661, 54, 262205, 6, 663, 58, 327812, 6, 664, 663, 90, 327808, 6, 665, 664, 59, 262205, 6, 666, 35, 327812, 6, 667, 665, 666, 327808, 6, 668, 662, 667, 262205, 62, 669, 67, 262205, 9, 670, 46, 327822, 62, 671, 669, 670, 393281, 97, 672, 646, 15, 668, 196670, 672, 671, 262205, 6, 673, 50, 327812, 6, 674, 673, 113, 327808, 6, 675, 674, 54, 262205, 6, 676, 58, 327812, 6, 677, 676, 90, 327808, 6, 678, 677, 113, 262205, 6, 679, 35, 327812, 6, 680, 678, 679, 327808, 6, 681, 675, 680, 262205, 62, 682, 68, 262205, 9, 683, 46, 327822, 62, 684, 682, 683, 393281, 97, 685, 646, 15, 681, 196670, 685, 684, 262205, 6, 686, 50, 327812, 6, 687, 686, 113, 327808, 6, 688, 687, 54, 262205, 6, 689, 58, 327812, 6, 690, 689, 90, 327808, 6, 691, 690, 124, 262205, 6, 692, 35, 327812, 6, 693, 691, 692, 327808, 6, 694, 688, 693, 262205, 62, 695, 69, 262205, 9, 696, 46, 327822, 62, 697, 695, 696, 393281, 97, 698, 646, 15, 694, 196670, 698, 697, 262205, 6, 699, 50, 327812, 6, 700, 699, 113, 327808, 6, 701, 700, 59, 262205, 6, 702, 58, 327812, 6, 703, 702, 90, 327808, 6, 704, 703, 54, 262205, 6, 705, 35, 327812, 6, 706, 704, 705, 327808, 6, 707, 701, 706, 262205, 62, 708, 70, 262205, 9, 709, 46, 327822, 62, 710, 708, 709, 393281, 97, 711, 646, 15, 707, 196670, 711, 710, 262205, 6, 712, 50, 327812, 6, 713, 712, 113, 327808, 6, 714, 713, 59, 262205, 6, 715, 58, 327812, 6, 716, 715, 90, 327808, 6, 717, 716, 59, 262205, 6, 718, 35, 327812, 6, 719, 717, 718, 327808, 6, 720, 714, 719, 262205, 62, 721, 71, 262205, 9, 722, 46, 327822, 62, 723, 721, 722, 393281, 97, 724, 646, 15, 720, 196670, 724, 723, 262205, 6, 725, 50, 327812, 6, 726, 725, 113, 327808, 6, 727, 726, 59, 262205, 6, 728, 58, 327812, 6, 729, 728, 90, 327808, 6, 730, 729, 113, 262205, 6, 731, 35, 327812, 6, 732, 730, 731, 327808, 6, 733, 727, 732, 262205, 62, 734, 72, 262205, 9, 735, 46, 327822, 62, 736, 734, 735, 393281, 97, 737, 646, 15, 733, 196670, 737, 736, 262205, 6, 738, 50, 327812, 6, 739, 738, 113, 327808, 6, 740, 739, 59, 262205, 6, 741, 58, 327812, 6, 742, 741, 90, 327808, 6, 743, 742, 124, 262205, 6, 744, 35, 327812, 6, 745, 743, 744, 327808, 6, 746, 740, 745, 262205, 62, 747, 73, 262205, 9, 748, 46, 327822, 62, 749, 747, 748, 393281, 97, 750, 646, 15, 746, 196670, 750, 749, 65789, 65592]);\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/shader_sgemm_block.js?");

/***/ }),

/***/ "./node_modules/webgpu-blas/dist/shader_sgemm_generic.js":
/*!***************************************************************!*\
  !*** ./node_modules/webgpu-blas/dist/shader_sgemm_generic.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shader = void 0;\nexports.Shader = new Uint32Array([119734787, 66304, 524295, 111, 0, 131089, 1, 393227, 1, 1280527431, 1685353262, 808793134, 0, 196622, 0, 1, 393231, 5, 4, 1852399981, 0, 33, 393232, 4, 17, 8, 8, 1, 196611, 2, 450, 262149, 4, 1852399981, 0, 196613, 8, 77, 327685, 11, 1634890337, 1952796025, 97, 327686, 11, 0, 1651340654, 7565925, 262149, 13, 1635018093, 0, 196613, 20, 78, 196613, 25, 75, 196613, 30, 120, 524293, 33, 1197436007, 1633841004, 1986939244, 1952539503, 1231974249, 68, 196613, 38, 121, 196613, 54, 7173491, 196613, 56, 107, 262149, 66, 1634890337, 16761, 327686, 66, 0, 1651340654, 7565925, 262149, 68, 1634890337, 6381433, 262149, 77, 1634890337, 17017, 327686, 77, 0, 1651340654, 7565925, 262149, 79, 1634890337, 6446969, 262149, 92, 1752198241, 97, 262149, 97, 1634890337, 17273, 327686, 97, 0, 1651340654, 7565925, 262149, 99, 1634890337, 6512505, 262215, 10, 6, 4, 262216, 11, 0, 24, 327752, 11, 0, 35, 0, 196679, 11, 2, 262215, 13, 34, 0, 262215, 13, 33, 3, 262215, 33, 11, 28, 262215, 65, 6, 4, 262216, 66, 0, 24, 327752, 66, 0, 35, 0, 196679, 66, 2, 262215, 68, 34, 0, 262215, 68, 33, 0, 262215, 76, 6, 4, 262216, 77, 0, 24, 327752, 77, 0, 35, 0, 196679, 77, 2, 262215, 79, 34, 0, 262215, 79, 33, 1, 262215, 96, 6, 4, 327752, 97, 0, 35, 0, 196679, 97, 2, 262215, 99, 34, 0, 262215, 99, 33, 2, 262215, 110, 11, 25, 131091, 2, 196641, 3, 2, 262165, 6, 32, 0, 262176, 7, 7, 6, 196630, 9, 32, 196637, 10, 9, 196638, 11, 10, 262176, 12, 12, 11, 262203, 12, 13, 12, 262165, 14, 32, 1, 262187, 14, 15, 0, 262176, 16, 12, 9, 262187, 14, 21, 1, 262187, 14, 26, 2, 262167, 31, 6, 3, 262176, 32, 1, 31, 262203, 32, 33, 1, 262187, 6, 34, 0, 262176, 35, 1, 6, 262187, 6, 39, 1, 131092, 44, 262176, 53, 7, 9, 262187, 9, 55, 0, 196637, 65, 9, 196638, 66, 65, 262176, 67, 12, 66, 262203, 67, 68, 12, 196637, 76, 9, 196638, 77, 76, 262176, 78, 12, 77, 262203, 78, 79, 12, 262187, 14, 93, 3, 196637, 96, 9, 196638, 97, 96, 262176, 98, 12, 97, 262203, 98, 99, 12, 262187, 6, 109, 8, 393260, 31, 110, 109, 109, 39, 327734, 2, 4, 0, 3, 131320, 5, 262203, 7, 8, 7, 262203, 7, 20, 7, 262203, 7, 25, 7, 262203, 7, 30, 7, 262203, 7, 38, 7, 262203, 53, 54, 7, 262203, 7, 56, 7, 262203, 53, 92, 7, 393281, 16, 17, 13, 15, 15, 262205, 9, 18, 17, 262253, 6, 19, 18, 196670, 8, 19, 393281, 16, 22, 13, 15, 21, 262205, 9, 23, 22, 262253, 6, 24, 23, 196670, 20, 24, 393281, 16, 27, 13, 15, 26, 262205, 9, 28, 27, 262253, 6, 29, 28, 196670, 25, 29, 327745, 35, 36, 33, 34, 262205, 6, 37, 36, 196670, 30, 37, 327745, 35, 40, 33, 39, 262205, 6, 41, 40, 196670, 38, 41, 262205, 6, 42, 30, 262205, 6, 43, 20, 327854, 44, 45, 42, 43, 262205, 6, 46, 38, 262205, 6, 47, 8, 327854, 44, 48, 46, 47, 327846, 44, 49, 45, 48, 196855, 51, 0, 262394, 49, 50, 51, 131320, 50, 65789, 131320, 51, 196670, 54, 55, 196670, 56, 34, 131321, 57, 131320, 57, 262390, 59, 60, 0, 131321, 61, 131320, 61, 262205, 6, 62, 56, 262205, 6, 63, 25, 327856, 44, 64, 62, 63, 262394, 64, 58, 59, 131320, 58, 262205, 6, 69, 38, 262205, 6, 70, 25, 327812, 6, 71, 69, 70, 262205, 6, 72, 56, 327808, 6, 73, 71, 72, 393281, 16, 74, 68, 15, 73, 262205, 9, 75, 74, 262205, 6, 80, 56, 262205, 6, 81, 20, 327812, 6, 82, 80, 81, 262205, 6, 83, 30, 327808, 6, 84, 82, 83, 393281, 16, 85, 79, 15, 84, 262205, 9, 86, 85, 327813, 9, 87, 75, 86, 262205, 9, 88, 54, 327809, 9, 89, 88, 87, 196670, 54, 89, 131321, 60, 131320, 60, 262205, 6, 90, 56, 327808, 6, 91, 90, 21, 196670, 56, 91, 131321, 57, 131320, 59, 393281, 16, 94, 13, 15, 93, 262205, 9, 95, 94, 196670, 92, 95, 262205, 6, 100, 30, 262205, 6, 101, 38, 262205, 6, 102, 20, 327812, 6, 103, 101, 102, 327808, 6, 104, 100, 103, 262205, 9, 105, 54, 262205, 9, 106, 92, 327813, 9, 107, 105, 106, 393281, 16, 108, 99, 15, 104, 196670, 108, 107, 65789, 65592]);\n\n\n//# sourceURL=webpack:///./node_modules/webgpu-blas/dist/shader_sgemm_generic.js?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var webgpu_blas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webgpu-blas */ \"./node_modules/webgpu-blas/dist/index.js\");\n/* harmony import */ var webgpu_blas__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webgpu_blas__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n\r\nfunction message(m, target) {\r\n    document.getElementById(target).innerText += m + '\\n';\r\n}\r\nfunction makeRandom(length) {\r\n    var array = new Float32Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n        array[i] = Math.random();\r\n    }\r\n    return array;\r\n}\r\nfunction checkResult(m, n, k, alpha, array_a, array_b, actual) {\r\n    var expected = new Float32Array(m * n);\r\n    for (var row = 0; row < m; row++) {\r\n        for (var col = 0; col < n; col++) {\r\n            var sum = 0.0;\r\n            for (var j = 0; j < k; j++) {\r\n                sum += array_a[row * k + j] * array_b[j * n + col];\r\n            }\r\n            expected[row * n + col] = sum * alpha;\r\n        }\r\n    }\r\n    for (var row = 0; row < m; row++) {\r\n        for (var col = 0; col < n; col++) {\r\n            var idx = row * n + col;\r\n            var expected_el = expected[idx];\r\n            var actual_el = actual[idx];\r\n            if (Math.abs(expected_el - actual_el) > (1e-5 + 1e-3 * Math.abs(expected_el))) {\r\n                console.error(\"[\" + row + \", \" + col + \"]: \" + expected_el + \" !== \" + actual_el);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction parseMNKTuples(s) {\r\n    var shapes = []; //[[m,n,k]]\r\n    for (var _i = 0, _a = s.split('\\n'); _i < _a.length; _i++) {\r\n        var line = _a[_i];\r\n        var parts = line.split(',').map(function (t) { return Number(t.trim()); });\r\n        if (parts.length === 3 && parts.every(function (v) { return v > 0; })) {\r\n            shapes.push(parts);\r\n        }\r\n    }\r\n    return shapes;\r\n}\r\nfunction run_benchmark() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var messageTarget, shapes, alpha, runs, _i, shapes_1, _a, m, n, k, array_a, array_b, timeSum, retSum, i, sgemmStartTime, result, sgemmEndTime, avgTime, flops, ex_1;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    messageTarget = 'bench_message';\r\n                    _b.label = 1;\r\n                case 1:\r\n                    _b.trys.push([1, 10, , 11]);\r\n                    shapes = parseMNKTuples(document.getElementById('benchmark_shapes').value);\r\n                    alpha = 1.0;\r\n                    runs = 10;\r\n                    _i = 0, shapes_1 = shapes;\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(_i < shapes_1.length)) return [3 /*break*/, 9];\r\n                    _a = shapes_1[_i], m = _a[0], n = _a[1], k = _a[2];\r\n                    array_a = makeRandom(m * k);\r\n                    array_b = makeRandom(k * n);\r\n                    // warmup\r\n                    return [4 /*yield*/, Object(webgpu_blas__WEBPACK_IMPORTED_MODULE_0__[\"sgemm\"])(m, n, k, alpha, array_a, array_b)];\r\n                case 3:\r\n                    // warmup\r\n                    _b.sent();\r\n                    timeSum = 0;\r\n                    retSum = 0;\r\n                    i = 0;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    if (!(i < runs)) return [3 /*break*/, 7];\r\n                    console.time('sgemm');\r\n                    sgemmStartTime = performance.now();\r\n                    return [4 /*yield*/, Object(webgpu_blas__WEBPACK_IMPORTED_MODULE_0__[\"sgemm\"])(m, n, k, alpha, array_a, array_b)];\r\n                case 5:\r\n                    result = _b.sent();\r\n                    retSum += result[0];\r\n                    sgemmEndTime = performance.now();\r\n                    console.timeEnd('sgemm');\r\n                    timeSum += sgemmEndTime - sgemmStartTime;\r\n                    _b.label = 6;\r\n                case 6:\r\n                    i++;\r\n                    return [3 /*break*/, 4];\r\n                case 7:\r\n                    avgTime = timeSum / runs;\r\n                    flops = m * n * k * 2 * 1000 / avgTime / 1000000000;\r\n                    message(\"Sgemm of (\" + m + \"x\" + k + \"),(\" + k + \"x\" + n + \"): average \" + avgTime + \" ms (\" + runs + \" runs), \" + flops.toFixed(2) + \" GFLOPS\", messageTarget);\r\n                    console.log('sum of result (to avoid optimization)', retSum);\r\n                    _b.label = 8;\r\n                case 8:\r\n                    _i++;\r\n                    return [3 /*break*/, 2];\r\n                case 9: return [3 /*break*/, 11];\r\n                case 10:\r\n                    ex_1 = _b.sent();\r\n                    alert(ex_1.message);\r\n                    return [3 /*break*/, 11];\r\n                case 11: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction small_example() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var array_a, array_b, result, ex_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    array_a = new Float32Array([1, 2, 3, 4]);\r\n                    array_b = new Float32Array([5, 6, 7, 8]);\r\n                    return [4 /*yield*/, Object(webgpu_blas__WEBPACK_IMPORTED_MODULE_0__[\"sgemm\"])(2, 2, 2, 1, array_a, array_b)];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    document.getElementById('small_example_result').innerText = \"[\" + result[0] + \", \" + result[1] + \"\\n \" + result[2] + \", \" + result[3] + \"]\";\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    ex_2 = _a.sent();\r\n                    alert(ex_2.message);\r\n                    return [3 /*break*/, 3];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction run_test() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var shapes, alpha, messageTarget, _i, shapes_2, _a, m, n, k, array_a, array_b, result, validation_result;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    shapes = parseMNKTuples(document.getElementById('test_shapes').value);\r\n                    alpha = 1.0;\r\n                    messageTarget = 'test_message';\r\n                    _i = 0, shapes_2 = shapes;\r\n                    _b.label = 1;\r\n                case 1:\r\n                    if (!(_i < shapes_2.length)) return [3 /*break*/, 4];\r\n                    _a = shapes_2[_i], m = _a[0], n = _a[1], k = _a[2];\r\n                    array_a = makeRandom(m * k);\r\n                    array_b = makeRandom(k * n);\r\n                    return [4 /*yield*/, Object(webgpu_blas__WEBPACK_IMPORTED_MODULE_0__[\"sgemm\"])(m, n, k, alpha, array_a, array_b)];\r\n                case 2:\r\n                    result = _b.sent();\r\n                    validation_result = checkResult(m, n, k, alpha, array_a, array_b, result);\r\n                    message(\"M=\" + m + \", N=\" + n + \", K=\" + k + \": \" + (validation_result ? 'OK' : 'Error'), messageTarget);\r\n                    _b.label = 3;\r\n                case 3:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nwindow.addEventListener('load', function () {\r\n    document.getElementById('run_benchmark').onclick = run_benchmark;\r\n    document.getElementById('small_example').onclick = small_example;\r\n    document.getElementById('run_test').onclick = run_test;\r\n    document.getElementById('is_webgpu_enabled').innerText = navigator.gpu ? 'Enabled' : 'Disabled (fallback pure JavaScript implementation will be used)';\r\n});\r\n\n\n//# sourceURL=webpack:///./src/main.ts?");

/***/ })

/******/ });